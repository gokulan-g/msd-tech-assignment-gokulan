- name: Generate Ansible inventory from terraform.tfstate
  hosts: localhost
  gather_facts: false

  vars:
    tfstate_path: "./terraform/terraform.tfstate"
    inventory_path: "./terraform/inventories.ini"
    inventory_dir: "./terraform"

  tasks:
    - name: print the file
      command: ls 
      register: op
      
    - debug:
        var: op
        
    - name: Ensure inventory directory exists
      file:
        path: "{{ inventory_dir }}"
        state: directory
        mode: '0755'

    - name: Read terraform.tfstate
      slurp:
        src: "{{ tfstate_path }}"
      register: raw_tfstate

    - name: Parse tfstate JSON
      set_fact:
        tfstate: "{{ raw_tfstate.content | b64decode | from_json }}"

    - name: Extract EC2 instances with 'Name' tag
      set_fact:
        named_instances: >-
          {{
            tfstate.resources
            | selectattr('type', 'equalto', 'aws_instance')
            | map(attribute='instances') | sum(start=[])
            | map(attribute='attributes')
            | selectattr('tags.Name', 'defined')
          }}

    - name: Write inventory.ini file for Ansible
      copy:
        dest: "{{ inventory_path }}"
        content: |
          [web]
          {% for inst in named_instances %}
          {{ inst.tags.Name | replace(' ', '_') }} ansible_host={{ inst.public_ip }}
          {% endfor %}
